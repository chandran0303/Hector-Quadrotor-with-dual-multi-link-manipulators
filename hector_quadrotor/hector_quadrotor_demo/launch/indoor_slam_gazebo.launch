<?xml version="1.0"?>

<launch>

  <!-- Start Gazebo with wg world running in (max) realtime -->
  <include file="$(find hector_gazebo_worlds)/launch/start.launch"/>

  <!-- Spawn simulated quadrotor uav -->
  <include file="$(find hector_quadrotor_gazebo)/launch/spawn_quadrotor.launch" >
    <arg name="model" value="$(find hector_quadrotor_description)/urdf/quadrotor_hokuyo_utm30lx.gazebo.xacro"/>
    <arg name="controllers" value="
        controller/attitude
        controller/velocity
        controller/position
        "/>
  </include>

  <!-- Start SLAM system -->
  <include file="$(find hector_mapping)/launch/mapping_default.launch">
    <arg name="odom_frame" value="world"/>
  </include>

  <!-- Start GeoTIFF mapper -->
  <include file="$(find hector_geotiff)/launch/geotiff_mapper.launch">
    <arg name="trajectory_publish_rate" value="4"/>
  </include>

  <!-- Start rviz visualization with preset config -->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find hector_quadrotor_demo)/rviz_cfg/indoor_slam.rviz"/>

  <include file="$(find hector_quadrotor_teleop)/launch/xbox_controller.launch" >
    <arg name="control_mode" value="position"/>
  </include>
  <node pkg="rosservice" type="rosservice" name="enable_motors" args="call --wait /enable_motors true" />
  <!-- <include file="$(find hector_quadrotor_demo)/launch/rrbot_control.launch">
  </include> -->
  <param name="cylinder" command="cat $(find hector_quadrotor_description)/urdf/cylinder.urdf" />
  <node name="cylinder_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param cylinder -x 1 -y 1 -model simple_cylinder" /> 
</launch>
